name: CD - Deploy to EC2 (Blue-Green)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.determine_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region:            ${{ secrets.AWS_REGION }}
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Spring Boot JAR
        run: ./gradlew bootJar -x test
        working-directory: ./backend

      - name: Determine Image Tag (SHA7)
        id: determine_tag
        run: echo "tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & Push Docker Image
        env:
          ECR_REGISTRY:   ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG:      ${{ steps.determine_tag.outputs.tag }}
        run: |
          docker build \
            -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" \
            ./backend --build-arg JAR_FILE=build/libs/*.jar
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy-blue-green:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy deploy.sh to EC2
        uses: appleboy/scp-action@v1
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ubuntu
          key:      ${{ secrets.EC2_SSH_KEY }}
          port:     22
          source:   scripts/deploy.sh
          target:   /home/ubuntu/app/scripts/

      - name: SSH & Run deploy.sh
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ubuntu
          key:      ${{ secrets.EC2_SSH_KEY }}
          port:     22
          envs: |
            AWS_REGION:        ${{ secrets.AWS_REGION }}
            ECR_REGISTRY:      ${{ secrets.ECR_REGISTRY }}
            ECR_REPOSITORY:    ${{ secrets.ECR_REPOSITORY }}
            IMAGE_TAG:         ${{ needs.build-and-push.outputs.image_tag }}

            RDS_ENDPOINT:      ${{ secrets.RDS_ENDPOINT }}
            RDS_PORT:          ${{ secrets.RDS_PORT }}
            RDS_DATABASE:      ${{ secrets.RDS_DATABASE }}
            RDS_USERNAME:      ${{ secrets.RDS_USERNAME }}
            RDS_PASSWORD:      ${{ secrets.RDS_PASSWORD }}

            ELASTICACHE_ENDPOINT: ${{ secrets.ELASTICACHE_ENDPOINT }}
            ELASTICACHE_PORT:     ${{ secrets.ELASTICACHE_PORT }}

            JWT_SECRET_KEY:       ${{ secrets.JWT_SECRET_KEY }}
            JWT_EXPIRATION_TIME:  ${{ secrets.JWT_EXPIRATION_TIME }}
          script: |
            set -euo pipefail
            cd /home/ubuntu/app/scripts
            chmod +x deploy.sh
            ./deploy.sh \
              "$AWS_REGION" \
              "$ECR_REGISTRY" \
              "$ECR_REPOSITORY" \
              "$IMAGE_TAG"
